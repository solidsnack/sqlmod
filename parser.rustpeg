use lines::*;


#[pub]
lines -> Vec<Line<'input>>
    = inline ** br

inline -> Line<'input>
    = declaration / broken_declaration / comment / something

declaration -> Line<'input>
    = "--@" " "+ name:name ro:(" "+ "ro")?
      { Declaration(Section(start_pos, pos, match_str),
                    Signature { name: name.into(), ro: ro.is_some() }) }

broken_declaration -> Line<'input>
    = "--@" [^\r\n]* { BrokenDeclaration(Section(start_pos, pos, match_str)) }

comment -> Line<'input>
    = "--" [^\r\n]* { Comment(Section(start_pos, pos, match_str)) }

something -> Line<'input>
    = [^\r\n]* { Text(Section(start_pos, pos, match_str)) }


/// Sectiones simple names.
name -> &'input str
    = [a-z] [a-zA-Z0-9_]* { match_str }


br = "\r\n" / "\n"